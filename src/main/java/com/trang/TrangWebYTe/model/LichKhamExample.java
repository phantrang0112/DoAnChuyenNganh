package com.trang.TrangWebYTe.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class LichKhamExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public LichKhamExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdlichkhamIsNull() {
			addCriterion("idlichkham is null");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamIsNotNull() {
			addCriterion("idlichkham is not null");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamEqualTo(Integer value) {
			addCriterion("idlichkham =", value, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamNotEqualTo(Integer value) {
			addCriterion("idlichkham <>", value, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamGreaterThan(Integer value) {
			addCriterion("idlichkham >", value, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamGreaterThanOrEqualTo(Integer value) {
			addCriterion("idlichkham >=", value, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamLessThan(Integer value) {
			addCriterion("idlichkham <", value, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamLessThanOrEqualTo(Integer value) {
			addCriterion("idlichkham <=", value, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamIn(List<Integer> values) {
			addCriterion("idlichkham in", values, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamNotIn(List<Integer> values) {
			addCriterion("idlichkham not in", values, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamBetween(Integer value1, Integer value2) {
			addCriterion("idlichkham between", value1, value2, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andIdlichkhamNotBetween(Integer value1, Integer value2) {
			addCriterion("idlichkham not between", value1, value2, "idlichkham");
			return (Criteria) this;
		}

		public Criteria andMabacsiIsNull() {
			addCriterion("mabacsi is null");
			return (Criteria) this;
		}

		public Criteria andMabacsiIsNotNull() {
			addCriterion("mabacsi is not null");
			return (Criteria) this;
		}

		public Criteria andMabacsiEqualTo(Integer value) {
			addCriterion("mabacsi =", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiNotEqualTo(Integer value) {
			addCriterion("mabacsi <>", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiGreaterThan(Integer value) {
			addCriterion("mabacsi >", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiGreaterThanOrEqualTo(Integer value) {
			addCriterion("mabacsi >=", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiLessThan(Integer value) {
			addCriterion("mabacsi <", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiLessThanOrEqualTo(Integer value) {
			addCriterion("mabacsi <=", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiIn(List<Integer> values) {
			addCriterion("mabacsi in", values, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiNotIn(List<Integer> values) {
			addCriterion("mabacsi not in", values, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiBetween(Integer value1, Integer value2) {
			addCriterion("mabacsi between", value1, value2, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiNotBetween(Integer value1, Integer value2) {
			addCriterion("mabacsi not between", value1, value2, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andUseridIsNull() {
			addCriterion("userId is null");
			return (Criteria) this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("userId is not null");
			return (Criteria) this;
		}

		public Criteria andUseridEqualTo(Integer value) {
			addCriterion("userId =", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotEqualTo(Integer value) {
			addCriterion("userId <>", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThan(Integer value) {
			addCriterion("userId >", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
			addCriterion("userId >=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThan(Integer value) {
			addCriterion("userId <", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThanOrEqualTo(Integer value) {
			addCriterion("userId <=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridIn(List<Integer> values) {
			addCriterion("userId in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotIn(List<Integer> values) {
			addCriterion("userId not in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridBetween(Integer value1, Integer value2) {
			addCriterion("userId between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotBetween(Integer value1, Integer value2) {
			addCriterion("userId not between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamIsNull() {
			addCriterion("ngayhenkham is null");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamIsNotNull() {
			addCriterion("ngayhenkham is not null");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamEqualTo(Date value) {
			addCriterionForJDBCDate("ngayhenkham =", value, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamNotEqualTo(Date value) {
			addCriterionForJDBCDate("ngayhenkham <>", value, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamGreaterThan(Date value) {
			addCriterionForJDBCDate("ngayhenkham >", value, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ngayhenkham >=", value, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamLessThan(Date value) {
			addCriterionForJDBCDate("ngayhenkham <", value, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ngayhenkham <=", value, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamIn(List<Date> values) {
			addCriterionForJDBCDate("ngayhenkham in", values, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamNotIn(List<Date> values) {
			addCriterionForJDBCDate("ngayhenkham not in", values, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ngayhenkham between", value1, value2, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andNgayhenkhamNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ngayhenkham not between", value1, value2, "ngayhenkham");
			return (Criteria) this;
		}

		public Criteria andTrangthaiIsNull() {
			addCriterion("trangthai is null");
			return (Criteria) this;
		}

		public Criteria andTrangthaiIsNotNull() {
			addCriterion("trangthai is not null");
			return (Criteria) this;
		}

		public Criteria andTrangthaiEqualTo(String value) {
			addCriterion("trangthai =", value, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiNotEqualTo(String value) {
			addCriterion("trangthai <>", value, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiGreaterThan(String value) {
			addCriterion("trangthai >", value, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiGreaterThanOrEqualTo(String value) {
			addCriterion("trangthai >=", value, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiLessThan(String value) {
			addCriterion("trangthai <", value, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiLessThanOrEqualTo(String value) {
			addCriterion("trangthai <=", value, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiLike(String value) {
			addCriterion("trangthai like", value, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiNotLike(String value) {
			addCriterion("trangthai not like", value, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiIn(List<String> values) {
			addCriterion("trangthai in", values, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiNotIn(List<String> values) {
			addCriterion("trangthai not in", values, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiBetween(String value1, String value2) {
			addCriterion("trangthai between", value1, value2, "trangthai");
			return (Criteria) this;
		}

		public Criteria andTrangthaiNotBetween(String value1, String value2) {
			addCriterion("trangthai not between", value1, value2, "trangthai");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table lichkham
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lichkham
     *
     * @mbg.generated do_not_delete_during_merge Thu Nov 18 22:58:13 ICT 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}