package com.trang.TrangWebYTe.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LichTrucExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public LichTrucExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andMaIsNull() {
			addCriterion("ma is null");
			return (Criteria) this;
		}

		public Criteria andMaIsNotNull() {
			addCriterion("ma is not null");
			return (Criteria) this;
		}

		public Criteria andMaEqualTo(Integer value) {
			addCriterion("ma =", value, "ma");
			return (Criteria) this;
		}

		public Criteria andMaNotEqualTo(Integer value) {
			addCriterion("ma <>", value, "ma");
			return (Criteria) this;
		}

		public Criteria andMaGreaterThan(Integer value) {
			addCriterion("ma >", value, "ma");
			return (Criteria) this;
		}

		public Criteria andMaGreaterThanOrEqualTo(Integer value) {
			addCriterion("ma >=", value, "ma");
			return (Criteria) this;
		}

		public Criteria andMaLessThan(Integer value) {
			addCriterion("ma <", value, "ma");
			return (Criteria) this;
		}

		public Criteria andMaLessThanOrEqualTo(Integer value) {
			addCriterion("ma <=", value, "ma");
			return (Criteria) this;
		}

		public Criteria andMaIn(List<Integer> values) {
			addCriterion("ma in", values, "ma");
			return (Criteria) this;
		}

		public Criteria andMaNotIn(List<Integer> values) {
			addCriterion("ma not in", values, "ma");
			return (Criteria) this;
		}

		public Criteria andMaBetween(Integer value1, Integer value2) {
			addCriterion("ma between", value1, value2, "ma");
			return (Criteria) this;
		}

		public Criteria andMaNotBetween(Integer value1, Integer value2) {
			addCriterion("ma not between", value1, value2, "ma");
			return (Criteria) this;
		}

		public Criteria andMabacsiIsNull() {
			addCriterion("mabacsi is null");
			return (Criteria) this;
		}

		public Criteria andMabacsiIsNotNull() {
			addCriterion("mabacsi is not null");
			return (Criteria) this;
		}

		public Criteria andMabacsiEqualTo(Integer value) {
			addCriterion("mabacsi =", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiNotEqualTo(Integer value) {
			addCriterion("mabacsi <>", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiGreaterThan(Integer value) {
			addCriterion("mabacsi >", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiGreaterThanOrEqualTo(Integer value) {
			addCriterion("mabacsi >=", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiLessThan(Integer value) {
			addCriterion("mabacsi <", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiLessThanOrEqualTo(Integer value) {
			addCriterion("mabacsi <=", value, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiIn(List<Integer> values) {
			addCriterion("mabacsi in", values, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiNotIn(List<Integer> values) {
			addCriterion("mabacsi not in", values, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiBetween(Integer value1, Integer value2) {
			addCriterion("mabacsi between", value1, value2, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andMabacsiNotBetween(Integer value1, Integer value2) {
			addCriterion("mabacsi not between", value1, value2, "mabacsi");
			return (Criteria) this;
		}

		public Criteria andNgaytrucIsNull() {
			addCriterion("ngaytruc is null");
			return (Criteria) this;
		}

		public Criteria andNgaytrucIsNotNull() {
			addCriterion("ngaytruc is not null");
			return (Criteria) this;
		}

		public Criteria andNgaytrucEqualTo(Date value) {
			addCriterion("ngaytruc =", value, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andNgaytrucNotEqualTo(Date value) {
			addCriterion("ngaytruc <>", value, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andNgaytrucGreaterThan(Date value) {
			addCriterion("ngaytruc >", value, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andNgaytrucGreaterThanOrEqualTo(Date value) {
			addCriterion("ngaytruc >=", value, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andNgaytrucLessThan(Date value) {
			addCriterion("ngaytruc <", value, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andNgaytrucLessThanOrEqualTo(Date value) {
			addCriterion("ngaytruc <=", value, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andNgaytrucIn(List<Date> values) {
			addCriterion("ngaytruc in", values, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andNgaytrucNotIn(List<Date> values) {
			addCriterion("ngaytruc not in", values, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andNgaytrucBetween(Date value1, Date value2) {
			addCriterion("ngaytruc between", value1, value2, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andNgaytrucNotBetween(Date value1, Date value2) {
			addCriterion("ngaytruc not between", value1, value2, "ngaytruc");
			return (Criteria) this;
		}

		public Criteria andTuanIsNull() {
			addCriterion("Tuan is null");
			return (Criteria) this;
		}

		public Criteria andTuanIsNotNull() {
			addCriterion("Tuan is not null");
			return (Criteria) this;
		}

		public Criteria andTuanEqualTo(String value) {
			addCriterion("Tuan =", value, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanNotEqualTo(String value) {
			addCriterion("Tuan <>", value, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanGreaterThan(String value) {
			addCriterion("Tuan >", value, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanGreaterThanOrEqualTo(String value) {
			addCriterion("Tuan >=", value, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanLessThan(String value) {
			addCriterion("Tuan <", value, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanLessThanOrEqualTo(String value) {
			addCriterion("Tuan <=", value, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanLike(String value) {
			addCriterion("Tuan like", value, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanNotLike(String value) {
			addCriterion("Tuan not like", value, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanIn(List<String> values) {
			addCriterion("Tuan in", values, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanNotIn(List<String> values) {
			addCriterion("Tuan not in", values, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanBetween(String value1, String value2) {
			addCriterion("Tuan between", value1, value2, "tuan");
			return (Criteria) this;
		}

		public Criteria andTuanNotBetween(String value1, String value2) {
			addCriterion("Tuan not between", value1, value2, "tuan");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table lichtruc
	 * @mbg.generated  Sun Dec 19 00:24:21 ICT 2021
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lichtruc
     *
     * @mbg.generated do_not_delete_during_merge Wed Dec 08 01:24:27 ICT 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}